library(coper)
help(cov)
A = matrix(rnorm(2*4), ncol=2)
cond2 = !any(is.na(X))
cond3 = !any(is.infinite(X))
X = a
X = A
cond1 = is.matrix(X)
cond2 = !any(is.na(X))
cond3 = !any(is.infinite(X))
cond1
cond2
cond3
library(coper)
library(coper)
devtools::document()
devtools::document()
usethis::use_mit_license()
library(coper)
help(corr)
library(coper)
## generate a toy data from 5-dimensional standard normal
dat = matrix(stats::rnorm(10*5), ncol=5)
## compute sample covariance
S = coper::cov(dat)
## convert into correlation
C = coper::cov2corr(S)
## visualize
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
image(S, main="covariance")
image(C, main="correlation")
par(opar)
C
S
dat = matrix(stats::rnorm(50*5), ncol=5)
## compute sample covariance
S = coper::cov(dat)
## convert into correlation
C = coper::cov2corr(S)
## visualize
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
image(S, main="covariance")
image(C, main="correlation")
## generate a toy data from 5-dimensional standard normal
n   = 20
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute sample covariance
S = coper::cov(dat)
## convert into correlation
C = coper::cov2corr(S)
## visualize
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
image(S, main="covariance")
image(C, main="correlation")
par(opar)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute sample covariance
S = coper::cov(dat)
## convert into correlation
C = coper::cov2corr(S)
## visualize
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
image(S, main="covariance")
image(C, main="correlation")
par(opar)
library(coper)
library(coper)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute sample covariance
S = coper::cov(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(S, main="sample covariance")
par(opar)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute sample covariance
S = coper::cov(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(S, main="sample covariance")
par(opar)
graphics.off()
library(coper)
A = cov(matrix(rnorm(10*3)))
base::eigen(A, only.values = TRUE)
A = cov(matrix(rnorm(10*3), ncol=3))
base::eigen(A, only.values = TRUE)
help(eigen)
library(coper)
A=matrix(rnorm(25*5), ncol=5)
S=cov(A)
cov2pcor(S)
ppcor::pcor(A)
ppcor::pcor(A)$estimate
ppcor::pcor(A)$estimate
ppcor::pcor(A)$estimate
cov2pcor(S)
cov2pcor(S)-ppcor::pcor(A)$estimate
library(coper)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute Pearson's correlation
C = coper::corr(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(C, main="Pearson's correlation")
par(opar)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute Pearson's correlation
C = coper::corr(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(C, main="Pearson's correlation")
par(opar)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute Pearson's correlation
C = coper::corr(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(C, main="Pearson's correlation")
par(opar)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute Pearson's correlation
C = coper::corr(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(C, main="Pearson's correlation")
par(opar)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute Pearson's correlation
C = coper::corr(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(C, main="Pearson's correlation")
par(opar)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute Pearson's correlation
C = coper::corr(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(C, main="Pearson's correlation")
par(opar)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute Pearson's correlation
C = coper::corr(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(C, main="Pearson's correlation")
par(opar)
help(image)
image(C, main="Pearson's correlation", xaxs="")
help("image")
X = c(2,4,15,20)
Z = c(0,0,1,1)
lm(X~Z)
Y = c(1,2,3,4)
dat  = cbind(X,Y,Z)
pcor(dat)
cov2pcor(cov(dat))
ppcor::pcor(dat)
ppcor::pcor(dat)$estimate
cov2pcor(cov(dat))
mm1 = lm(X~Z)
mm2 = lm(Y~Z)
corr(mm1$residuals,mm2$residuals)
cor(mm1$residuals,mm2$residuals)
A = matrix(rnorm(3*5), ncol=5)
A
A[,-c(2,3)]
library(coper)
# personal comparison
dat = matrix(rnorm(10*5), ncol=5)
S   = coper::cov(dat)
C1 = ppcor::pcor(dat)
C2 = coper::cov2pcor(S)
C3 = coper::pcor(dat)
C1
C1 = ppcor::pcor(dat)$estimate
C2 = coper::cov2pcor(S)
C3 = coper::pcor(dat)
C1
C2
C3
library(coper)
# personal comparison
dat = matrix(rnorm(10*5), ncol=5)
S   = coper::cov(dat)
C1 = ppcor::pcor(dat)$estimate
C2 = coper::cov2pcor(S)
C3 = coper::pcor(dat)
C1
C2
C3
library(coper)
# personal comparison
dat = matrix(rnorm(10*5), ncol=5)
S   = coper::cov(dat)
C1 = ppcor::pcor(dat)$estimate
C2 = coper::cov2pcor(S)
C3 = coper::pcor(dat)
graphics.off()
par(mfrow=c(1,3))
image(C1, main="ppcor")
image(C2, main="cov2pcor")
image(C3, main="pcor")
C1
C2
C3
C1-C2
C1-C3
C2-C3
library(coper)
library(coper)
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## compute partial correlation
C = coper::corr(dat)
## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(C, main="partial correlation")
par(opar)
graphics.off()
library(coper)
pkgdown::init_site()
pkgdown::build_site()
library(coper)
library(coper)
## SIMPLE EXAMPLE ---------------------------------------
## generate a toy data from 5-dimensional standard normal
n   = 25
p   = 5
dat = matrix(stats::rnorm(n*p), ncol=p)
## estimate
Sraw = coper::cov(dat)$S
Snow = coper::covOAS(dat)$S
## true model parameter from standard normal
I = diag(5)
## visualize
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3), pty="s")
image(I,    xaxt='n', yaxt='n', main="model")
image(Sraw, xaxt='n', yaxt='n', main="sample covariance")
image(Snow, xaxt='n', yaxt='n', main="OAS estimate")
par(opar)
cov(OAS)
covOAS(dat)
## EXPERIMENT -------------------------------------------
## now, we want to see how 'rho' is determined contingent
## on the number of observations available.
## define a sequence : varying number of observations
vec_sam = seq(from=5, to=200, by=5)
## we will record 'rho' and 'norm differences'
vec_rho  = rep(0, length(vec_sam))
vec_diff = rep(0, length(vec_sam))
## iterate
for (i in 1:length(vec_sam)){
# data generation & run
dat_norun <- matrix(rnorm(5*vec_sam[i]), ncol=5)
out_norun <- coper::covOAS(dat_norun)
# record
vec_rho[i]  = out_norun$rho
vec_diff[i] = norm(out_norun$S - diag(5), "f")
}
## visualize
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2))
plot(vec_sam, vec_rho, main="estimated rhos",
lwd=2, type="b", col="red")
plot(vec_sam, vec_diff, main="Frobenius error",
lwd=2, type="b", col="blue")
par(opar)
library(coper)
